# -*- coding: utf-8 -*-
"""assignment4 simulation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WQ4IzLGiKQN-npZk5YjhoYnAKjvk1dS5
"""

import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from scipy.stats import bernoulli
import math
from scipy import stats
num_sim=10000000
data_per_truth = bernoulli.rvs(size=num_sim,p=0.75)
ax= sns.distplot(data_per_truth,
                 kde=False,
                 color="skyblue",
                 hist_kws={"linewidth":10000,'alpha':1})
#X=0 person lies
#X=1 person tells truth
ax.set(xlabel='X', ylabel='Frequency')
ax.set(title='(Simulation)Frequency of person telling truth')
plt.show()
count_dice_true=0
count_dice=0
data_dice = bernoulli.rvs(size=num_sim,p=1/6)
for i in range(num_sim):
   if data_per_truth[i] == 1 and data_dice[i] == 1 :
      count_dice += 1
      count_dice_true += 1
   elif data_per_truth[i] == 0 and data_dice[i] == 0 :
      count_dice += 1  
prob_dice_other=1-prob_dice
print(f'(simulation)probability that outcome=5 is ',prob_dice)
x=['outcome is not 5','outcome is 5']
h=[prob_dice_other,prob_dice]
plt.bar(x,h)
plt.xlabel("X")
plt.ylabel("Probability")
plt.title("(Simulation)probability of outcomes")
plt.show()